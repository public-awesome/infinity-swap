/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.30.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Uint128 = string;
export type Decimal = string;
export interface InstantiateMsg {
  price_ranges: [string, PriceRange][];
  sudo_params: SudoParamsForString;
}
export interface PriceRange {
  max: Uint128;
  min: Uint128;
}
export interface SudoParamsForString {
  fair_burn: string;
  listing_fee: Coin;
  max_asks_removed_per_block: number;
  max_collection_offers_removed_per_block: number;
  max_finders_fee_percent: Decimal;
  max_offers_removed_per_block: number;
  max_royalty_fee_percent: Decimal;
  min_ask_removal_reward: Coin;
  min_expiration_seconds: number;
  min_offer_removal_reward: Coin;
  order_removal_lookahead_secs: number;
  royalty_registry: string;
  trading_fee_percent: Decimal;
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export type ExecuteMsg = {
  set_ask: {
    collection: string;
    order_options?: OrderOptionsForString | null;
    price: Coin;
    token_id: string;
  };
} | {
  update_ask: {
    asset_recipient?: UpdateValForString | null;
    collection: string;
    expiration_info?: UpdateValForExpirationInfo | null;
    finders_fee_percent?: UpdateValForDecimal | null;
    token_id: string;
  };
} | {
  accept_ask: {
    collection: string;
    order_options?: OrderOptionsForString | null;
    token_id: string;
  };
} | {
  remove_ask: {
    collection: string;
    token_id: string;
  };
} | {
  remove_expired_ask: {
    collection: string;
    token_id: string;
  };
} | {
  set_offer: {
    collection: string;
    order_options?: OrderOptionsForString | null;
    price: Coin;
    token_id: string;
  };
} | {
  update_offer: {
    asset_recipient?: UpdateValForString | null;
    collection: string;
    expiration_info?: UpdateValForExpirationInfo | null;
    finders_fee_percent?: UpdateValForDecimal | null;
    token_id: string;
  };
} | {
  accept_offer: {
    collection: string;
    creator: string;
    order_options?: OrderOptionsForString | null;
    token_id: string;
  };
} | {
  remove_offer: {
    collection: string;
    token_id: string;
  };
} | {
  reject_offer: {
    collection: string;
    creator: string;
    token_id: string;
  };
} | {
  remove_expired_offer: {
    collection: string;
    creator: string;
    token_id: string;
  };
} | {
  set_collection_offer: {
    collection: string;
    order_options?: OrderOptionsForString | null;
    price: Coin;
  };
} | {
  update_collection_offer: {
    asset_recipient?: UpdateValForString | null;
    collection: string;
    expiration_info?: UpdateValForExpirationInfo | null;
    finders_fee_percent?: UpdateValForDecimal | null;
  };
} | {
  accept_collection_offer: {
    collection: string;
    creator: string;
    order_options?: OrderOptionsForString | null;
    token_id: string;
  };
} | {
  remove_collection_offer: {
    collection: string;
  };
} | {
  remove_expired_collection_offer: {
    collection: string;
    creator: string;
  };
};
export type Timestamp = Uint64;
export type Uint64 = string;
export type UpdateValForString = "unset" | {
  set: string;
};
export type UpdateValForExpirationInfo = "unset" | {
  set: ExpirationInfo;
};
export type UpdateValForDecimal = "unset" | {
  set: Decimal;
};
export interface OrderOptionsForString {
  asset_recipient?: string | null;
  expiration_info?: ExpirationInfo | null;
  finder?: string | null;
  finders_fee_percent?: Decimal | null;
}
export interface ExpirationInfo {
  expiration: Timestamp;
  removal_reward: Coin;
}
export type QueryMsg = {
  sudo_params: {};
} | {
  price_range: {
    denom: string;
  };
} | {
  price_ranges: {
    query_options?: QueryOptionsForString | null;
  };
} | {
  ask: {
    collection: string;
    token_id: string;
  };
} | {
  asks_by_collection: {
    collection: string;
    query_options?: QueryOptionsForAsksByCollectionOffset | null;
  };
} | {
  asks_by_price: {
    collection: string;
    denom: string;
    query_options?: QueryOptionsForAsksByPriceOffset | null;
  };
} | {
  asks_by_creator: {
    creator: string;
    query_options?: QueryOptionsForAsksByCreatorOffset | null;
  };
} | {
  asks_by_expiration: {
    query_options?: QueryOptionsForAsksByExpirationOffset | null;
  };
} | {
  offer: {
    collection: string;
    creator: string;
    token_id: string;
  };
} | {
  offers_by_collection: {
    collection: string;
    query_options?: QueryOptionsForOffersByCollectionOffset | null;
  };
} | {
  offers_by_token_price: {
    collection: string;
    denom: string;
    query_options?: QueryOptionsForOffersByTokenPriceOffset | null;
    token_id: string;
  };
} | {
  offers_by_creator: {
    creator: string;
    query_options?: QueryOptionsForOffersByCreatorOffset | null;
  };
} | {
  offers_by_expiration: {
    query_options?: QueryOptionsForOffersByExpirationOffset | null;
  };
} | {
  collection_offer: {
    collection: string;
    creator: string;
  };
} | {
  collection_offers_by_collection: {
    collection: string;
    query_options?: QueryOptionsForCollectionOffersByCollectionOffset | null;
  };
} | {
  collection_offers_by_price: {
    collection: string;
    denom: string;
    query_options?: QueryOptionsForCollectionOffersByPriceOffset | null;
  };
} | {
  collection_offers_by_creator: {
    creator: string;
    query_options?: QueryOptionsForCollectionOffersByCreatorOffset | null;
  };
} | {
  collection_offers_by_expiration: {
    query_options?: QueryOptionsForCollectionOffersByExpirationOffset | null;
  };
};
export type QueryBoundForString = {
  inclusive: string;
} | {
  exclusive: string;
};
export type QueryBoundForAsksByCollectionOffset = {
  inclusive: AsksByCollectionOffset;
} | {
  exclusive: AsksByCollectionOffset;
};
export type QueryBoundForAsksByPriceOffset = {
  inclusive: AsksByPriceOffset;
} | {
  exclusive: AsksByPriceOffset;
};
export type QueryBoundForAsksByCreatorOffset = {
  inclusive: AsksByCreatorOffset;
} | {
  exclusive: AsksByCreatorOffset;
};
export type QueryBoundForAsksByExpirationOffset = {
  inclusive: AsksByExpirationOffset;
} | {
  exclusive: AsksByExpirationOffset;
};
export type QueryBoundForOffersByCollectionOffset = {
  inclusive: OffersByCollectionOffset;
} | {
  exclusive: OffersByCollectionOffset;
};
export type QueryBoundForOffersByTokenPriceOffset = {
  inclusive: OffersByTokenPriceOffset;
} | {
  exclusive: OffersByTokenPriceOffset;
};
export type QueryBoundForOffersByCreatorOffset = {
  inclusive: OffersByCreatorOffset;
} | {
  exclusive: OffersByCreatorOffset;
};
export type QueryBoundForOffersByExpirationOffset = {
  inclusive: OffersByExpirationOffset;
} | {
  exclusive: OffersByExpirationOffset;
};
export type QueryBoundForCollectionOffersByCollectionOffset = {
  inclusive: CollectionOffersByCollectionOffset;
} | {
  exclusive: CollectionOffersByCollectionOffset;
};
export type QueryBoundForCollectionOffersByPriceOffset = {
  inclusive: CollectionOffersByPriceOffset;
} | {
  exclusive: CollectionOffersByPriceOffset;
};
export type QueryBoundForCollectionOffersByCreatorOffset = {
  inclusive: CollectionOffersByCreatorOffset;
} | {
  exclusive: CollectionOffersByCreatorOffset;
};
export type QueryBoundForCollectionOffersByExpirationOffset = {
  inclusive: CollectionOffersByExpirationOffset;
} | {
  exclusive: CollectionOffersByExpirationOffset;
};
export interface QueryOptionsForString {
  descending?: boolean | null;
  limit?: number | null;
  max?: QueryBoundForString | null;
  min?: QueryBoundForString | null;
}
export interface QueryOptionsForAsksByCollectionOffset {
  descending?: boolean | null;
  limit?: number | null;
  max?: QueryBoundForAsksByCollectionOffset | null;
  min?: QueryBoundForAsksByCollectionOffset | null;
}
export interface AsksByCollectionOffset {
  token_id: string;
}
export interface QueryOptionsForAsksByPriceOffset {
  descending?: boolean | null;
  limit?: number | null;
  max?: QueryBoundForAsksByPriceOffset | null;
  min?: QueryBoundForAsksByPriceOffset | null;
}
export interface AsksByPriceOffset {
  amount: number;
  token_id: string;
}
export interface QueryOptionsForAsksByCreatorOffset {
  descending?: boolean | null;
  limit?: number | null;
  max?: QueryBoundForAsksByCreatorOffset | null;
  min?: QueryBoundForAsksByCreatorOffset | null;
}
export interface AsksByCreatorOffset {
  collection: string;
  token_id: string;
}
export interface QueryOptionsForAsksByExpirationOffset {
  descending?: boolean | null;
  limit?: number | null;
  max?: QueryBoundForAsksByExpirationOffset | null;
  min?: QueryBoundForAsksByExpirationOffset | null;
}
export interface AsksByExpirationOffset {
  collection: string;
  expiration: number;
  token_id: string;
}
export interface QueryOptionsForOffersByCollectionOffset {
  descending?: boolean | null;
  limit?: number | null;
  max?: QueryBoundForOffersByCollectionOffset | null;
  min?: QueryBoundForOffersByCollectionOffset | null;
}
export interface OffersByCollectionOffset {
  creator: string;
  token_id: string;
}
export interface QueryOptionsForOffersByTokenPriceOffset {
  descending?: boolean | null;
  limit?: number | null;
  max?: QueryBoundForOffersByTokenPriceOffset | null;
  min?: QueryBoundForOffersByTokenPriceOffset | null;
}
export interface OffersByTokenPriceOffset {
  amount: number;
  creator: string;
}
export interface QueryOptionsForOffersByCreatorOffset {
  descending?: boolean | null;
  limit?: number | null;
  max?: QueryBoundForOffersByCreatorOffset | null;
  min?: QueryBoundForOffersByCreatorOffset | null;
}
export interface OffersByCreatorOffset {
  collection: string;
  token_id: string;
}
export interface QueryOptionsForOffersByExpirationOffset {
  descending?: boolean | null;
  limit?: number | null;
  max?: QueryBoundForOffersByExpirationOffset | null;
  min?: QueryBoundForOffersByExpirationOffset | null;
}
export interface OffersByExpirationOffset {
  collection: string;
  creator: string;
  expiration: number;
  token_id: string;
}
export interface QueryOptionsForCollectionOffersByCollectionOffset {
  descending?: boolean | null;
  limit?: number | null;
  max?: QueryBoundForCollectionOffersByCollectionOffset | null;
  min?: QueryBoundForCollectionOffersByCollectionOffset | null;
}
export interface CollectionOffersByCollectionOffset {
  creator: string;
}
export interface QueryOptionsForCollectionOffersByPriceOffset {
  descending?: boolean | null;
  limit?: number | null;
  max?: QueryBoundForCollectionOffersByPriceOffset | null;
  min?: QueryBoundForCollectionOffersByPriceOffset | null;
}
export interface CollectionOffersByPriceOffset {
  amount: number;
  creator: string;
}
export interface QueryOptionsForCollectionOffersByCreatorOffset {
  descending?: boolean | null;
  limit?: number | null;
  max?: QueryBoundForCollectionOffersByCreatorOffset | null;
  min?: QueryBoundForCollectionOffersByCreatorOffset | null;
}
export interface CollectionOffersByCreatorOffset {
  collection: string;
}
export interface QueryOptionsForCollectionOffersByExpirationOffset {
  descending?: boolean | null;
  limit?: number | null;
  max?: QueryBoundForCollectionOffersByExpirationOffset | null;
  min?: QueryBoundForCollectionOffersByExpirationOffset | null;
}
export interface CollectionOffersByExpirationOffset {
  collection: string;
  creator: string;
  expiration: number;
}
export type NullableAsk = Ask | null;
export type Addr = string;
export interface Ask {
  collection: Addr;
  order_info: OrderInfo;
  token_id: string;
}
export interface OrderInfo {
  asset_recipient?: Addr | null;
  creator: Addr;
  expiration_info?: ExpirationInfo | null;
  finders_fee_percent?: Decimal | null;
  price: Coin;
}
export type ArrayOfAsk = Ask[];
export type NullableCollectionOffer = CollectionOffer | null;
export interface CollectionOffer {
  collection: Addr;
  order_info: OrderInfo;
}
export type ArrayOfOffer = Offer[];
export interface Offer {
  collection: Addr;
  order_info: OrderInfo;
  token_id: string;
}
export type ArrayOfCollectionOffer = CollectionOffer[];
export type ArrayOfTupleOfStringAndPriceRange = [string, PriceRange][];
export interface SudoParamsForAddr {
  fair_burn: Addr;
  listing_fee: Coin;
  max_asks_removed_per_block: number;
  max_collection_offers_removed_per_block: number;
  max_finders_fee_percent: Decimal;
  max_offers_removed_per_block: number;
  max_royalty_fee_percent: Decimal;
  min_ask_removal_reward: Coin;
  min_expiration_seconds: number;
  min_offer_removal_reward: Coin;
  order_removal_lookahead_secs: number;
  royalty_registry: Addr;
  trading_fee_percent: Decimal;
}