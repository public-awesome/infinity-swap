/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.30.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { MsgExecuteContractEncodeObject } from "@cosmjs/cosmwasm-stargate";
import { MsgExecuteContract } from "cosmjs-types/cosmwasm/wasm/v1/tx";
import { toUtf8 } from "@cosmjs/encoding";
import { InstantiateMsg, ExecuteMsg, Uint128, QueryMsg, QueryBoundForPairQuoteOffset, QueryOptionsForPairQuoteOffset, PairQuoteOffset, Addr, ArrayOfPairQuote, PairQuote, Coin } from "./InfinityIndex.types";
export interface InfinityIndexMessage {
  contractAddress: string;
  sender: string;
  updatePairIndices: ({
    buyFromPairQuote,
    collection,
    denom,
    sellToPairQuote
  }: {
    buyFromPairQuote?: Uint128;
    collection: string;
    denom: string;
    sellToPairQuote?: Uint128;
  }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
export class InfinityIndexMessageComposer implements InfinityIndexMessage {
  sender: string;
  contractAddress: string;

  constructor(sender: string, contractAddress: string) {
    this.sender = sender;
    this.contractAddress = contractAddress;
    this.updatePairIndices = this.updatePairIndices.bind(this);
  }

  updatePairIndices = ({
    buyFromPairQuote,
    collection,
    denom,
    sellToPairQuote
  }: {
    buyFromPairQuote?: Uint128;
    collection: string;
    denom: string;
    sellToPairQuote?: Uint128;
  }, _funds?: Coin[]): MsgExecuteContractEncodeObject => {
    return {
      typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
      value: MsgExecuteContract.fromPartial({
        sender: this.sender,
        contract: this.contractAddress,
        msg: toUtf8(JSON.stringify({
          update_pair_indices: {
            buy_from_pair_quote: buyFromPairQuote,
            collection,
            denom,
            sell_to_pair_quote: sellToPairQuote
          }
        })),
        funds: _funds
      })
    };
  };
}