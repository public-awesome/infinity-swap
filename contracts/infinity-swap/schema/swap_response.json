{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "SwapResponse",
  "type": "object",
  "required": [
    "swaps"
  ],
  "properties": {
    "swaps": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Swap"
      }
    }
  },
  "additionalProperties": false,
  "definitions": {
    "NftPayment": {
      "description": "An NFT payment that needs to be executed at the end of a transaction",
      "type": "object",
      "required": [
        "address",
        "nft_token_id"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "nft_token_id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Swap": {
      "description": "A summary of an individual swap",
      "type": "object",
      "required": [
        "network_fee",
        "nft_payment",
        "pool_id",
        "spot_price",
        "transaction_type"
      ],
      "properties": {
        "finder_payment": {
          "anyOf": [
            {
              "$ref": "#/definitions/TokenPayment"
            },
            {
              "type": "null"
            }
          ]
        },
        "network_fee": {
          "$ref": "#/definitions/Uint128"
        },
        "nft_payment": {
          "$ref": "#/definitions/NftPayment"
        },
        "pool_id": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "royalty_payment": {
          "anyOf": [
            {
              "$ref": "#/definitions/TokenPayment"
            },
            {
              "type": "null"
            }
          ]
        },
        "seller_payment": {
          "anyOf": [
            {
              "$ref": "#/definitions/TokenPayment"
            },
            {
              "type": "null"
            }
          ]
        },
        "spot_price": {
          "$ref": "#/definitions/Uint128"
        },
        "transaction_type": {
          "$ref": "#/definitions/TransactionType"
        }
      },
      "additionalProperties": false
    },
    "TokenPayment": {
      "description": "A token payment that needs to be executed at the end of a transaction",
      "type": "object",
      "required": [
        "address",
        "amount"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/Uint128"
        }
      },
      "additionalProperties": false
    },
    "TransactionType": {
      "description": "Defines whether the end user is buying or selling NFTs",
      "type": "string",
      "enum": [
        "user_submits_nfts",
        "user_submits_tokens"
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
